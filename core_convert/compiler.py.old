import re as regex # regex search / replace

def checkbox(text: str):
	# needs full rework
	lines = text.split('\n') # split every line to iterate
	qid = lines[0].split(":")[0].removeprefix("? ") # get the question id (qid)
	i = 0
	while i < len(lines): # syntax to have a counter and dynmically change the current line
		# first line
		if lines[i].startswith('? '):
			lines[i] = lines[i].replace('? ','<div id="',1) # init the div for the question
			# qid (questionid) is inbetween
			lines[i] = lines[i].replace(': ','"><div class="title">',1) # close the div (only at first ':')
			lines[i] = lines[i] + '</div>'
		# description lines
		elif lines[i].startswith('\t> '):
			lines[i] = lines[i].replace('\t> ','<div class="description">') # init the div for the descr
			i += 1 # go to the next lines
			while lines[i].startswith('\t> '): # check every line if the description continues
				lines[i] = lines[i].replace('\t> ','') # if yes, replace it
				i += 1 # go to the next line
			i -= 1 # if in line that doesn't start with \t> anymore, go to the previous (go to next in next run again)
			lines[i] = lines[i] + '</div>' # add a div to the end
		# checkboxes
		elif lines[i].startswith('\t[]') or lines[i].startswith('\t[ ]'): # empty checkbox
			aid = lines[i].split(' ')[2] # get answerid (aid)
			# checkbox / label
			lines[i] = regex.sub('\t\[ \] \S* ', '<input type="checkbox" id="' + qid + '_' + aid + '" name="' + qid + "_" + aid + '"></input>' + '<label for="' + qid + '_' + aid + '">', lines[i]) # normal notation
			lines[i] = regex.sub('\t\[\] \S* ', '<input type="checkbox" id="' + qid + '_' + aid + '" name="' + qid + "_" + aid + '"></input>' + '<label for="' + qid + '_' + aid + '">', lines[i]) # short notation
			lines[i] = lines[i] + '</label>'
		elif lines[i].lower().startswith('\t[x]'): # checked checkboxes
			aid = lines[i].split(' ')[1] # get answerid (aid)
			# checkbox / label
			lines[i] = regex.sub('\t\[x\] \S* ', '<input type="checkbox" id="' + qid + '_' + aid + '" name="' + qid + "_" + aid + '" checked></input>' + '<label for="' + qid + '_' + aid + '">', lines[i]) # normal notation
			lines[i] = lines[i] + '</label>'
		# paragraphs
		elif lines[i].startswith('\t\t'):
			lines[i] = '<input type="checkbox" class="hidden"></input><label>' + lines[i].replace('\t\t','') + '</label>' # hidden checkbox to match alignment
		i += 1 # go to next line
	lines[-1] = lines[-1] + '</div>' # add final closing div at the end
	return '\n'.join(lines)

def multiple(text: str):
	None